name: Build and Deploy Wisecow
run-name: building the wisecow docker image and pushing to docker registry
on:
  push:
    branches: [ main ]
    paths-ignore:
    - ".github/workflows/**"
    - "README.md"
    - "k8s/**"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.version.outputs.new_version }}
    steps:
    - name: checkout
      uses: actions/checkout@v3
    
    - name: get and increment version
      id: version
      run: |
        CUR_VERSION=$(grep 'image:' k8s/deployment.yml | awk -F':' '{print $3}')
        MAJOR=$(echo $CUR_VERSION | cut -d. -f1)
        MINOR=$(echo $CUR_VERSION | cut -d. -f2)
        PATCH=$(echo $CUR_VERSION | cut -d. -f3)
        
        PATCH=$((PATCH + 1))
        
        if [ $PATCH -gt 99 ]; then
          MINOR=$((MINOR + 1))
          PATCH=0
        fi
        
        if [ $MINOR -gt 99 ]; then
          MAJOR=$((MAJOR + 1))
          MINOR=0
        fi
        
        NEW_VERSION="$MAJOR.$MINOR.$PATCH"
        echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
        echo "Version: $CUR_VERSION â†’ $NEW_VERSION"
    
    - name: login to docker hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERUSER }}
        password: ${{ secrets.DOCKERPASS }}
    
    - name: build and push to docker hub
      run: |
        VERSION="${{ steps.version.outputs.new_version }}"
        docker build -t ${{ secrets.DOCKERUSER }}/wisecow:$VERSION .
        docker push ${{ secrets.DOCKERUSER }}/wisecow:$VERSION

  pushing-changes:
    needs: [build-and-push]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: checkout
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.GIT_TOKEN }}
    
    - name: installing yq
      run: |
        sudo wget https://github.com/mikefarah/yq/releases/download/v4.35.1/yq_linux_amd64 -O /usr/local/bin/yq
        sudo chmod +x /usr/local/bin/yq
    
    - name: update deployment
      run: |
        VERSION="${{ needs.build-and-push.outputs.VERSION }}"
        IMAGE="${{ secrets.DOCKERUSER }}/wisecow:$VERSION"
        yq eval ".spec.template.spec.containers[0].image = \"$IMAGE\"" -i k8s/deployment.yml
    
    - name: git push
      run: |
        git config user.name "${{ secrets.GIT_USER }}"
        git config user.email "${{ secrets.GIT_EMAIL }}"
        git add k8s/deployment.yml
        git commit -m "chore: update version to ${{ needs.build-and-push.outputs.VERSION }} [skip ci]"
        git push origin main
